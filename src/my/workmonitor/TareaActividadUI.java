/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package my.workmonitor;

import java.io.Serializable;
import java.util.ArrayList;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.border.EmptyBorder;
import javax.swing.table.TableCellRenderer;
import my.dao.ActividadDao;
import my.dao.TareaActividadDao;
import my.dao.TareaDao;
import my.dao.TipoTareaDao;
import my.entity.Actividad;
import my.entity.TareaActividad;
import my.entity.TipoTarea;

/**
 *
 * @author Diego
 */
public class TareaActividadUI extends javax.swing.JDialog {

    /**
     * Creates new form TareaActividadUI2
     */
    private static TipoTareaDao tipoTareaDao= new TipoTareaDao();
    private static TareaDao tareaDao= new TareaDao(); 
    private static ActividadDao actividadDao= new ActividadDao(); 
    private static TareaActividadDao tareaActividadDao= new TareaActividadDao();     
    
    
    public TareaActividadUI(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jList1 = new javax.swing.JList();
        jLabel3 = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        jList2 = new javax.swing.JList();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        jScrollPane4 = new javax.swing.JScrollPane();
        jButton7 = new javax.swing.JButton();
        jButton9 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jLabel1.setBackground(new java.awt.Color(123, 153, 172));
        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText(" Asociar Actividades a Tipos");
        jLabel1.setOpaque(true);

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel2.setText("Tipos");

        jList1.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        jList1.setModel(new javax.swing.AbstractListModel() {
            //List<TipoTarea> tiposTarea=tipoTareaDao.getAll(TipoTarea.class);
            List<TipoTarea> tiposTarea=tipoTareaDao.getByPersona(WorkMonitorUI.persona.getId());
            public int getSize() { return tiposTarea.size(); }
            public Object getElementAt(int i) { return tiposTarea.get(i); }
        });
        jList1.setFocusable(false);
        jList1.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                jList1PropertyChange(evt);
            }
        });
        jList1.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                jList1ValueChanged(evt);
            }
        });
        jScrollPane2.setViewportView(jList1);

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel3.setText("Actividades x Tipo");

        ActividadDao actividadDao=new ActividadDao();
        jList2.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        jList2.setModel(new javax.swing.AbstractListModel() {
            List<Actividad> actividades=new ArrayList<Actividad>();
            public int getSize() { return actividades.size(); }
            public Object getElementAt(int i) { return actividades.get(i); }
        });
        jList2.setFocusable(false);
        jScrollPane3.setViewportView(jList2);

        jButton1.setText("<<");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setText(">>");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel4.setText("Actividades");

        jList3.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        jList3.setModel(new javax.swing.AbstractListModel() {
            List<Actividad> actividades=actividadDao.getByPersona(WorkMonitorUI.persona.getId());
            public int getSize() { return actividades.size(); }
            public Object getElementAt(int i) { return actividades.get(i); }
        });
        jList3.setFocusable(false);
        jScrollPane4.setViewportView(jList3);

        jButton7.setText("+");
        jButton7.setMargin(new java.awt.Insets(0, 0, 0, 0));
        jButton7.setMaximumSize(new java.awt.Dimension(1, 1));
        jButton7.setMinimumSize(new java.awt.Dimension(1, 1));
        jButton7.setPreferredSize(new java.awt.Dimension(37, 20));
        jButton7.setBorder(new EmptyBorder(1, 1, 1, 1) );
        jButton7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton7ActionPerformed(evt);
            }
        });

        jButton9.setText("-");
        jButton9.setMargin(new java.awt.Insets(0, 0, 0, 0));
        jButton9.setMaximumSize(new java.awt.Dimension(1, 1));
        jButton9.setMinimumSize(new java.awt.Dimension(1, 1));
        jButton9.setPreferredSize(new java.awt.Dimension(37, 20));
        jButton9.setBorder(new EmptyBorder(1, 1, 1, 1) );
        jButton9.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton9ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 122, Short.MAX_VALUE)
                    .addComponent(jLabel2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 120, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jButton1, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jButton2, javax.swing.GroupLayout.Alignment.TRAILING)))
                    .addComponent(jLabel3))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel4)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addGroup(layout.createSequentialGroup()
                            .addGap(20, 20, 20)
                            .addComponent(jButton7, javax.swing.GroupLayout.DEFAULT_SIZE, 37, Short.MAX_VALUE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(jButton9, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGap(20, 20, 20))
                        .addComponent(jScrollPane4, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 120, Short.MAX_VALUE)))
                .addGap(20, 20, 20))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(16, 16, 16)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(jLabel3)
                    .addComponent(jLabel4))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(58, 58, 58)
                        .addComponent(jButton1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton2)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane3, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 189, Short.MAX_VALUE)
                            .addComponent(jScrollPane4)
                            .addComponent(jScrollPane2))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jButton7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jButton9, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(11, 11, 11))))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jList1PropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_jList1PropertyChange
        // TODO add your handling code here:

    }//GEN-LAST:event_jList1PropertyChange

    private void jList1ValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_jList1ValueChanged
        // TODO add your handling code here:
        ActividadDao actividadDao=new ActividadDao();
        TipoTarea tipoTarea= (TipoTarea)jList1.getSelectedValue();

        if(jList1.getSelectedValue()==null)
        return;

        jList2.setModel(new javax.swing.AbstractListModel() {
            List<Actividad> actividades=actividadDao.getByTipoTarea(jList1.getSelectedValue());
            public int getSize() { return actividades.size(); }
            public Object getElementAt(int i) { return actividades.get(i); }
        });
    }//GEN-LAST:event_jList1ValueChanged

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:                      
        List<Actividad> actividades=jList2.getSelectedValuesList();        
        
        List<TareaActividad> tareasActividad = new ArrayList<TareaActividad>();                
        
        TipoTarea tipoTarea=(TipoTarea)jList1.getSelectedValue();
        
        if(actividades.isEmpty()){
            JOptionPane.showMessageDialog(null, "Debe seleccionar al menos una actividad a desasociar");
            return;
        }
        
        for(int i=0;i<actividades.size();++i){   
            TareaActividad tareaActividad=new TareaActividad();            
            List<TareaActividad> tareaActividades=tareaActividadDao.get(tipoTarea.getId(),actividades.get(i).getId());
            if(!tareaActividades.isEmpty())
                tareasActividad.add(tareaActividades.get(0));
        }

        try {
            tareaActividadDao.delete(tareasActividad);            
        } catch (Exception ex) {
            Logger.getLogger(ActividadUI.class.getName()).log(Level.SEVERE, null, ex);
        }

        jList2.setModel(new javax.swing.AbstractListModel() {
            TipoTarea tipoTarea=(TipoTarea)jList1.getModel().getElementAt(0);
            List<Actividad> actividades=actividadDao.getByTipoTarea(tipoTarea);
            public int getSize() { return actividades.size(); }
            public Object getElementAt(int i) { return actividades.get(i); }
        });
        
        JOptionPane.showMessageDialog(null, "La(s) actividad(es) se han desasociado correctamente");
        //this.dispose();
        return;  
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:     
        List<TipoTarea> tiposTarea=jList1.getSelectedValuesList();
        
        List<Actividad> actividadesPorTareas=new ArrayList<Actividad>(jList2.getModel().getSize());
        
        for(int i=0;i<jList2.getModel().getSize();++i)
            actividadesPorTareas.add((Actividad) jList2.getModel().getElementAt(i));
        
        List<Actividad> actividades=jList3.getSelectedValuesList();

        if(tiposTarea.isEmpty()){
            JOptionPane.showMessageDialog(null, "Debe seleccionar al menos un tipo de tarea al cual asociar actividades");
            return;
        }
        
        if(actividades.isEmpty()){
            JOptionPane.showMessageDialog(null, "Debe seleccionar al menos una actividad para asociar a un tipo de tarea");
            return;
        }
        
        for(int i=0;i<actividades.size();++i)
            System.out.println("actividades.get(i).getNombre()="+actividades.get(i).getNombre());

        for(int i=0;i<actividadesPorTareas.size();++i)
            System.out.println("actividadesPorTarea.get(i).getNombre()="+actividadesPorTareas.get(i).getNombre());        
        
        System.out.println("actividadesPorTareas.size()1="+actividadesPorTareas.size());
        
        boolean interseccion=!actividadesPorTareas.retainAll(actividades);
        
        System.out.println("actividadesPorTareas.size()2="+actividadesPorTareas.size());
                
        //System.out.println("interseccion="+interseccion);
        //System.out.println("actividades.retainAll(actividadesPorTareas)="+actividades.retainAll(actividadesPorTareas));                
                
        if(actividadesPorTareas.size()>0 && !actividadesPorTareas.isEmpty()){
            JOptionPane.showMessageDialog(null, "Está intentando asignar actividades que ya han sido asignadas. Por favor descartelas");
            return;
        }                
                       
        List<TareaActividad> tareasActividad = new ArrayList<TareaActividad>();
        
        for(int i=0;i<tiposTarea.size();++i){            
            TipoTarea tipoTarea=(TipoTarea)jList1.getModel().getElementAt(i);            
            for(int j=0;j<actividades.size();++j){
                TareaActividad tareaActividad= new TareaActividad();
                tareaActividad.setTarea(tiposTarea.get(i));
                tareaActividad.setActividad(actividades.get(j));                
                tareaActividad.setIdTarea(tiposTarea.get(i).getId());
                tareaActividad.setIdActividad(actividades.get(j).getId());
                tareasActividad.add(tareaActividad);
            }
        }

        try {
            if(tareaActividadDao.save(tareasActividad)==(Serializable)0){
                JOptionPane.showMessageDialog(null, "Error al ingresar tarea actividad. No se ha podido ingresar");
                return;
            }
        } catch (Exception ex) {
            Logger.getLogger(ActividadUI.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        JOptionPane.showMessageDialog(null, "La(s) actividad(es) se han ingresado correctamente");
        
        jList2.setModel(new javax.swing.AbstractListModel() {
            TipoTarea tipoTarea=(TipoTarea)jList1.getSelectedValue();
            List<Actividad> actividades=actividadDao.getByTipoTarea(tipoTarea);
            public int getSize() { return actividades.size(); }
            public Object getElementAt(int i) { return actividades.get(i); }
        });
        
        WorkMonitorUI.jList2.setModel(new javax.swing.AbstractListModel() {
            TipoTarea tipoTarea=(TipoTarea)WorkMonitorUI.jList1.getSelectedValue();
            List<Actividad> actividades=actividadDao.getByTipoTarea(tipoTarea);
            public int getSize() { return actividades.size(); }
            public Object getElementAt(int i) { return actividades.get(i); }
        });
        
        //this.dispose();
        return;        
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton7ActionPerformed
        // TODO add your handling code here:                
        ActividadUI actividadUI=new ActividadUI(null, true);
        actividadUI.setVisible(true);
    }//GEN-LAST:event_jButton7ActionPerformed

    private void jButton9ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton9ActionPerformed
        // TODO add your handling code here:
        int dialogResult =JOptionPane.showConfirmDialog(null, "Al eliminar esta actividad, se eliminarán todas las HH asociadas a ella. ¿Seguro que desea eliminar la actividad?");
        if(dialogResult == JOptionPane.YES_OPTION){
            Actividad actividad=(Actividad)jList3.getSelectedValue();
            actividadDao.delete(actividad);
            TareaActividadUI.jList3.setModel(new javax.swing.AbstractListModel() {
                List<Actividad> actividades=actividadDao.getByPersona(WorkMonitorUI.persona.getId());
                public int getSize() { return actividades.size(); }
                public Object getElementAt(int i) { return actividades.get(i); }
            });
            JOptionPane.showMessageDialog(null, "La actividad se ha eliminado correctamente");
            //this.dispose();
        }
        else{
            return;
        }
    }//GEN-LAST:event_jButton9ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(TareaActividadUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(TareaActividadUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(TareaActividadUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(TareaActividadUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                TareaActividadUI dialog = new TareaActividadUI(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton7;
    private javax.swing.JButton jButton9;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JList jList1;
    private javax.swing.JList jList2;
    public static final javax.swing.JList jList3 = new javax.swing.JList();
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    // End of variables declaration//GEN-END:variables
}
